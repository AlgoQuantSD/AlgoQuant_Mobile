// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileListOptions Should render 1`] = `
<View
  style={
    Object {
      "alignItems": "flex-start",
      "flex": 0.6,
      "justifyContent": "flex-start",
      "paddingLeft": "10%",
      "paddingTop": "5%",
      "width": "100%",
    }
  }
>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={1}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": "10%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontSize": 16,
            "paddingRight": "1%",
          }
        }
      >
        View trade history
      </Text>
      <Text />
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={2}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": "10%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontSize": 16,
            "paddingRight": "1%",
          }
        }
      >
        Connect to Alpaca
      </Text>
      <Text />
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={3}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": "10%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontSize": 16,
            "paddingRight": "1%",
          }
        }
      >
        Reset password
      </Text>
      <Text />
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={4}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": "10%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontSize": 16,
            "paddingRight": "1%",
          }
        }
      >
        Update email
      </Text>
      <Text />
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={5}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": "10%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontSize": 16,
            "paddingRight": "1%",
          }
        }
      >
        Delete account
      </Text>
      <Text />
    </View>
  </RNGestureHandlerButton>
  <RNGestureHandlerButton
    collapsable={false}
    delayLongPress={600}
    enabled={true}
    exclusive={true}
    handlerTag={6}
    handlerType="NativeViewGestureHandler"
    onGestureEvent={[Function]}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    onHandlerStateChange={[Function]}
    rippleColor={0}
    touchSoundDisabled={false}
  >
    <View
      accessible={true}
      collapsable={false}
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "opacity": 1,
          "paddingBottom": "10%",
        }
      }
    >
      <Text
        style={
          Object {
            "color": "#FFFFFF",
            "fontSize": 16,
            "paddingRight": "1%",
          }
        }
      >
        Sign out
      </Text>
      <Text />
    </View>
  </RNGestureHandlerButton>
</View>
`;
